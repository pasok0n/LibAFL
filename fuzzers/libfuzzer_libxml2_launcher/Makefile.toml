# Variables
[env]
FUZZER_NAME='fuzzer_libxml2'
PROJECT_DIR = { script = ["pwd"] }
CARGO_TARGET_DIR = { value = "${PROJECT_DIR}/target", condition = { env_not_set = ["CARGO_TARGET_DIR"] } }
LIBAFL_CC = '${CARGO_TARGET_DIR}/release/libafl_cc'
LIBAFL_CXX = '${CARGO_TARGET_DIR}/release/libafl_cxx'
FUZZER = '${CARGO_TARGET_DIR}/release/${FUZZER_NAME}'

[tasks.unsupported]
script_runner="@shell"
script='''
echo "Cargo-make not integrated yet on this"
'''

# libxml2
[tasks.libxml2]
linux_alias = "libpng_unix"
mac_alias = "libpng_unix"
windows_alias = "unsupported"

[tasks.libpng_unix]
condition = { files_not_exist = ["./libxml2-2.9.14"]}
script_runner="@shell"
script='''
wget https://download.gnome.org/sources/libxml2/2.9/libxml2-2.9.14.tar.xz
tar xvf libxml2-2.9.14.tar.xz
'''

# Compilers
[tasks.cxx]
linux_alias = "cxx_unix"
mac_alias = "cxx_unix"
windows_alias = "unsupported"

[tasks.cxx_unix]
command = "cargo"
args = ["build" , "--release"]

[tasks.cc]
linux_alias = "cc_unix"
mac_alias = "cc_unix"
windows_alias = "unsupported"

[tasks.cc_unix]
command = "cargo"
args = ["build" , "--release"]

[tasks.crash_cxx]
linux_alias = "crash_cxx_unix"
mac_alias = "crash_cxx_unix"
windows_alias = "unsupported"

[tasks.crash_cxx_unix]
command = "cargo"
args = ["build" , "--release", "--features=crash"]

[tasks.crash_cc]
linux_alias = "crash_cc_unix"
mac_alias = "crash_cc_unix"
windows_alias = "unsupported"

[tasks.crash_cc_unix]
command = "cargo"
args = ["build" , "--release", "--features=crash"]

# Library
[tasks.lib]
linux_alias = "lib_unix"
mac_alias = "lib_unix"
windows_alias = "unsupported"

[tasks.lib_unix]
script_runner="@shell"
script='''
cd libxml2-2.9.14 && ./configure --disable-shared --without-debug --without-ftp --without-http --without-legacy --without-python LIBS='-ldl'
cd "${PROJECT_DIR}"
make -C libxml2-2.9.14 CC="${CARGO_TARGET_DIR}/release/libafl_cc" CXX="${CARGO_TARGET_DIR}/release/libafl_cxx" -j `nproc`
'''
dependencies = [ "libxml2", "cxx", "cc" ]

# Library
[tasks.crash_lib]
linux_alias = "crash_lib_unix"
mac_alias = "crash_lib_unix"
windows_alias = "unsupported"

[tasks.crash_lib_unix]
script_runner="@shell"
script='''
cd libxml2-2.9.14 && ./configure --disable-shared --without-debug --without-ftp --without-http --without-legacy --without-python LIBS='-ldl'
cd "${PROJECT_DIR}"
make -C libxml2-2.9.14 CC="${CARGO_TARGET_DIR}/release/libafl_cc" CXX="${CARGO_TARGET_DIR}/release/libafl_cxx" -j `nproc`
'''
dependencies = [ "libxml2", "crash_cxx", "crash_cc" ]

# Harness
[tasks.fuzzer]
linux_alias = "fuzzer_unix"
mac_alias = "fuzzer_unix"
windows_alias = "unsupported"

[tasks.fuzzer_unix]
command = "${CARGO_TARGET_DIR}/release/libafl_cxx"
args = ["${PROJECT_DIR}/harness.cc", "${PROJECT_DIR}/libxml2-2.9.14/.libs/libxml2.a", "-I", "${PROJECT_DIR}/libxml2-2.9.14/include/", "-I", "${PROJECT_DIR}/libxml2-2.9.14/", "-o", "${FUZZER_NAME}", "-lm", "-lz" , "-llzma"]
dependencies = [ "lib", "cxx", "cc" ]

# Crashing Harness
[tasks.fuzzer_crash]
linux_alias = "fuzzer_crash_unix"
mac_alias = "fuzzer_crash_unix"
windows_alias = "unsupported"

[tasks.fuzzer_crash_unix]
command = "${CARGO_TARGET_DIR}/release/libafl_cxx"
args = ["${PROJECT_DIR}/harness.cc", "${PROJECT_DIR}/libxml2-2.9.14/.libs/libxml2.a","-I", "${PROJECT_DIR}/libxml2-2.9.14/include/", "-I", "${PROJECT_DIR}/libxml2-2.9.14/", "-o", "${FUZZER_NAME}_crash", "-lm", "-lz", "-llzma"]
dependencies = [ "crash_lib", "crash_cxx", "crash_cc" ]

# Run the fuzzer
[tasks.run]
linux_alias = "run_unix"
mac_alias = "run_unix"
windows_alias = "unsupported"

[tasks.run_unix]
script_runner = "@shell"
script='''
./${FUZZER_NAME} -c all -i corpus/
'''
dependencies = [ "fuzzer" ]


# Run the fuzzer with a crash
[tasks.crash]
linux_alias = "crash_unix"
mac_alias = "crash_unix"
windows_alias = "unsupported"

[tasks.crash_unix]
script_runner = "@shell"
script='''
./${FUZZER_NAME}_crash -c all -i corpus/
'''
dependencies = [ "fuzzer_crash" ]



# Test
[tasks.test]
linux_alias = "test_unix"
mac_alias = "test_mac"
windows_alias = "unsupported"

[tasks.test_unix]
script_runner = "@shell"
script='''
rm -rf libafl_unix_shmem_server || true
(timeout 11s ./${FUZZER_NAME} >fuzz_stdout.log 2>/dev/null || true) &
sleep 0.2
timeout 10s ./${FUZZER_NAME} >/dev/null 2>/dev/null || true
if [ -z "$(grep "corpus: 30" fuzz_stdout.log)" ]; then
    echo "Fuzzer does not generate any testcases or any crashes"
    exit 1
else
    echo "Fuzzer is working"
fi
'''
dependencies = [ "fuzzer" ]

[tasks.test_mac]
script_runner = "@shell"
script='''
rm -rf libafl_unix_shmem_server || true
(timeout 11s ./${FUZZER_NAME} >fuzz_stdout.log 2>/dev/null || true) &
sleep 0.2
timeout 10s ./${FUZZER_NAME} >/dev/null 2>/dev/null || true
'''
dependencies = [ "fuzzer" ]

# Clean up
[tasks.clean]
linux_alias = "clean_unix"
mac_alias = "clean_unix"
windows_alias = "unsupported"

[tasks.clean_unix]
# Disable default `clean` definition
clear = true
script_runner="@shell"
script='''
rm -f ./${FUZZER_NAME}
make -C libxml2-2.9.14 clean
cargo clean
'''
